### Key bindings
# Basics:
# Start a terminal
bindsym $mod+Return exec $term
bindsym $mod+Ctrl+Return exec $term -e tmux attach

# Kill focused window
bindsym $mod+shift+q kill

# Start your launcher
bindsym $mod+d exec $menu
bindsym $mod+a exec $menu2

# Lockscreen
bindsym $mod+x exec swaylock -f -C ~/.config/swaylock/config

# Toggle bar
bindsym $mod+shift+b exec killall waybar
bindsym $mod+b exec waybar

# Cycle app
bindsym $alt+Tab exec pkill wofi || ~/.config/wofi/windows.py

# Drag floating window
floating_modifier $mod normal

# Reload the configuration file
bindsym $mod+Ctrl+c reload

# Exit sway
#bindsym $mod+Shift+Ctrl+q exec swaymsg exit
# Exit sway (logs you out of your Wayland session)
bindsym $mod+Shift+x exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'

# Volume
bindsym --locked XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym --locked XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym --locked XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%

# Microphone
bindsym $mod+F1 exec changemicvol mute && ( [ "$(get-mic-mute)" = "true" ] && echo 0 > $WOBSOCK ) || get-mic-volume > $WOBSOCK
bindsym $mod+F2 exec changemicvol down && get-mic-volume > $WOBSOCK
bindsym $mod+F3 exec changemicvol up && get-mic-volume > $WOBSOCK

# Brightness
bindsym --locked XF86MonBrightnessUp exec brightnessctl set 2%+
bindsym --locked XF86MonBrightnessDown exec brightnessctl set 2%-

# Applications
bindsym $mod+Shift+e exec $FMGR
bindsym $mod+apostrophe exec galculator
#bindsym $mod+w exec $BROWSER
bindsym $mod+Shift+w exec $BROWSER --private-window
# bindsym $mod+g exec geany
bindsym $mod+F4 exec pavucontrol -t 3
bindsym $mod+F9 exec mpvcam

# floaating terminal
bindsym $mod+Shift+Return exec $term --class sp-term
#bindsym $mod+e exec $term --class sp-lf -e lf
#bindsym $mod+c exec $term --class sp-cal -e calcurse
#bindsym $mod+m exec $term --class sp-mus -e ncmpcpp
bindsym $mod+$alt+n exec $term --class sp-nmt -e nmtui
bindsym $mod+Shift+Delete exec $term --class sp-htop -e htop



# Toggle notifications
bindsym $mod+z exec swaync-client -t -sw

### Color picker
# Get RGB code
# bindsym $mod+y exec wl-color-picker clipboard
# bindsym $mod+y exec grim -g "$(slurp -p)" -t ppm - | convert - -format '%[pixel:p{0,0}]' txt:- | tail -n 1 | cut -d ' ' -f 4 | wl-copy
# Get RGB code and open zenity
# bindsym $mod+Shift+y exec wl-color-picker

# Emoji Picker
bindsym $mod+grave exec pkill wofi || ~/.config/wofi/wofi-emoji

### CLipboard
bindsym $mod+v exec pkill wofi || clipman pick -t wofi
bindsym $mod+Shift+v exec clipman clear -t wofi
bindsym $mod+Ctrl+v exec clipman clear --all && \
  notify-send "Clipman" "All clipboard cleared" --icon=$HOME/.local/share/notify-icons/bell.png

### Screenshot (Saved on ~/Pictures)
# Grim and swappy (like 'flameshot gui')
bindsym Print exec grim -g "$(slurp)" - | swappy -f -
# Grim and swappy (pick window)
bindsym $alt+Print exec swappy-window
# All displays to file
bindsym $mod+Ctrl+Print exec grimshot --notify save
# Current display to clipboard
bindsym Ctrl+Print exec grimshot --notify copy output
bindsym $mod+Print exec grimshot --notify save output
# Current window
bindsym $mod+Shift+p exec grimshot --notify copy active
bindsym $mod+Ctrl+p exec grimshot --notify save active
# Region select
#bindsym $mod+Shift+s exec grimshot --notify copy area
#bindsym $mod+Ctrl+s exec grimshot --notify save area
# Screen record
bindsym $mod+Ctrl+Shift+r exec $term -e wf-recorder -a -f $HOME/$(date +"Screenrecord_%Y-%m-%d_%H-%M-%S.mp4")

### Wlsunset (redshift)
# Warm
bindsym $mod+F7 exec wlsunset -T 4001
# Normal
bindsym $mod+Shift+F8 exec wlsunset -T 6500
bindsym $mod+Shift+F7 exec wlsunset -T 6500

# Regular floating
for_window [app_id="sp-term|sp-lf|sp-cal|sp-mus|sp-nmt|sp-htop"] floating enable

# Sway scratchpad:
bindsym $mod+Shift+minus move scratchpad
bindsym $mod+minus scratchpad show

## Moving around:
# Move your focus around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right
# Or use $mod+[up|down|left|right]
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right
# Ditto, with arrow keys
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# Workspaces:
# Switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10
# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10
# Note: workspaces can have any name you want, not just numbers.
# We just use 1-10 as the default.
bindsym $mod+o workspace next
bindsym $mod+i workspace prev
bindsym $mod+Tab workspace back_and_forth

# Layout stuff:
# $mod+m or $mod+n, for horizontal and vertical splits
# respectively.
#bindsym $mod+n splitv
#bindsym $mod+b splith

# Switch the current container between different layout styles
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# Make the current focus fullscreen
bindsym $mod+f fullscreen

# Toggle sticky (window should floating first)
bindsym $mod+shift+s sticky toggle

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle

# Swap focus between the tiling area and the floating area
bindsym $mod+space focus mode_toggle

# Move focus to the parent container
# bindsym $mod+a focus parent
# focus the child container
# bindsym $mod+Shift+a focus child


# Resize
bindsym $mod+Ctrl+h resize shrink width 5 px or 5 ppt
bindsym $mod+Ctrl+j resize grow height 5 px or 5 ppt
bindsym $mod+Ctrl+k resize shrink height 5 px or 5 ppt
bindsym $mod+Ctrl+l resize grow width 5 px or 5 ppt
bindsym $mod+Ctrl+Left resize shrink width 5 px or 5 ppt
bindsym $mod+Ctrl+Down resize grow height 5 px or 5 ppt
bindsym $mod+Ctrl+Up resize shrink height 5 px or 5 ppt
bindsym $mod+Ctrl+Right resize grow width 5 px or 5 ppt

# MPD
bindsym $mod+backslash exec --no-startup-id mpc-util toggle
bindsym $mod+Shift+backslash exec --no-startup-id mpc-util stop
bindsym $mod+bracketleft exec --no-startup-id mpc-util prev
bindsym $mod+bracketright exec --no-startup-id mpc-util next
bindsym $mod+Shift+bracketleft exec --no-startup-id mpc-util seek5down
bindsym $mod+Shift+bracketright exec --no-startup-id mpc-util seek5up
bindsym $mod+Ctrl+bracketleft exec --no-startup-id mpc-util seek30down
bindsym $mod+Ctrl+bracketright exec --no-startup-id mpc-util seek30up
bindsym $mod+$alt+bracketleft exec --no-startup-id mpc-util repeat
bindsym $mod+$alt+bracketright exec --no-startup-id mpc-util random
bindsym $mod+Ctrl+Shift+bracketleft exec --no-startup-id mpc-util seek0


bindsym $mod+Escape mode $mode_system
bindsym $mod+m bar mode invisible ["bar-1"]
bindsym $mod+n bar mode dock bar-1
